<Windows:LoadingWindowBase x:Class="MixItUp.WPF.Windows.Wizard.NewUserWizardWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MixItUp.WPF.Windows.Wizard"
        xmlns:AccountControls="clr-namespace:MixItUp.WPF.Controls.Accounts"
        xmlns:resx="clr-namespace:MixItUp.Base;assembly=MixItUp.Base"
        xmlns:Controls="clr-namespace:MixItUp.WPF.Controls"
        xmlns:Windows="clr-namespace:MixItUp.WPF.Windows"
        xmlns:MaterialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:UsersControls="clr-namespace:MixItUp.WPF.Controls.Users"
        mc:Ignorable="d"
                           
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"   
                     
        Icon="./../../Logo.ico"                        
        Title="Mix It Up - New User Wizard" Height="600" Width="800">
    <Windows:LoadingWindowBase.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Windows:LoadingWindowBase.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="10" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <MaterialDesign:DialogHost x:Name="MDDialogHost" Identifier="RootDialog" />

        <Grid x:Name="MainGrid" Grid.Row="0" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="10" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid Visibility="{Binding IntroPageVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="40" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="40" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Image Source="/Assets/Images/MixItUp-Logo-Name.png" Width="500" Grid.Row="0" HorizontalAlignment="Center" Margin="-15,0,0,0" />

                    <TextBlock Grid.Row="2" TextWrapping="Wrap" Width="700">This wizard will help get started with Mix It Up by logging you into your streaming platform accounts, help you import your existing data from some bots, and walk you through some of the ropes of how things work.</TextBlock>

                    <TextBlock Grid.Row="4" TextWrapping="Wrap" Width="700">Before we get started, we want to let you know about some great resources you can use to help you with problems or give you ideas of things to create. Click any of the buttons below to go to that resource:</TextBlock>

                    <Grid Grid.Row="6" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="250" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="250" />
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Command="{Binding DiscordCommand}" Height="60" Width="60" Background="Transparent">
                            <Image Source="/Assets/Images/Discord.png" Width="50" Height="50" Margin="-10,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button>

                        <TextBlock Grid.Column="2" TextWrapping="Wrap" VerticalAlignment="Center">Our Discord is our main point for support &amp; questions. This should be your first place to go to for any issues you might be encountering.</TextBlock>

                        <Button Grid.Column="4" Command="{Binding TwitterCommand}" Height="60" Width="60" Background="Transparent">
                            <Image Source="/Assets/Images/Twitter.png" Width="45" Height="45" Margin="-10,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button>

                        <TextBlock Grid.Column="6" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Left" Width="230">Our Twitter account is a great way to stay up to date on important announcements or major updates.</TextBlock>
                    </Grid>

                    <Grid Grid.Row="8" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="250" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="250" />
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Command="{Binding YouTubeCommand}" Height="60" Width="60" Background="Transparent">
                            <Image Source="/Assets/Images/YouTube.png" Width="45" Height="45" Margin="-10,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button>

                        <TextBlock Grid.Column="2" TextWrapping="Wrap" VerticalAlignment="Center" Width="220" HorizontalAlignment="Left">Our YouTube account features many tutorials create by us and our community to help ramp you up or show off cool creations.</TextBlock>

                        <Button Grid.Column="4" Command="{Binding WikiCommand}" Height="60" Width="60" Background="Transparent">
                            <Image Source="/Assets/Images/Wiki.png" Width="50" Height="50" Margin="-10,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button>

                        <TextBlock Grid.Column="6" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Left" Width="240">Our Wiki pages contain detailed information about many of the different features available throughout the entire app.</TextBlock>
                    </Grid>
                </Grid>

                <Grid Visibility="{Binding StreamerAccountsPageVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" TextWrapping="Wrap" Width="700" Text="{x:Static resx:Resources.AccountsWizardInstructions}"/>

                    <TextBlock Grid.Row="2" TextWrapping="Wrap" Width="700" Text="{x:Static resx:Resources.AccountsDetails}"/>

                    <AccountControls:StreamingPlatformAccountControl Grid.Row="4" DataContext="{Binding Twitch}" />
                </Grid>

                <Grid Visibility="{Binding ScorpBotPageVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Style="{StaticResource HeaderTextBlock}" HorizontalAlignment="Center">Import ScorpBot Data</TextBlock>

                    <StackPanel Grid.Row="2" Width="675">
                        <TextBlock TextWrapping="Wrap" Margin="0,0,0,20">If you previously used ScorpBot, we can import several things from your settings to get you ramped up faster in Mix It Up! Currently, the following features can be imported:</TextBlock>

                        <TextBlock Margin="20,10,0,0">- Chat Commands</TextBlock>
                        <TextBlock Margin="20,0,0,0">- Timers</TextBlock>
                        <TextBlock Margin="20,0,0,0">- Banned Words</TextBlock>
                        <TextBlock Margin="20,0,0,0">- Quotes</TextBlock>
                        <TextBlock Margin="20,0,0,0">- Viewer Data (Currency, Rank, &amp; Hours)</TextBlock>
                        <TextBlock Margin="40,0,0,0" TextWrapping="Wrap">- (NOTE: If your Ranks ("points1") are based on Hours, we will create an additional Currency based on the points used in "points1")</TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,30,0,0">To get started, use the File Dialog below to select your ScorpBot installation directory (the folder where ScorpBot.exe is located) or can you skip this by doing nothing and clicking Next:</TextBlock>
                    </StackPanel>

                    <Grid Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Row="2" Text="{Binding ScorpBotDirectory}" MaterialDesign:HintAssist.Hint="{x:Static resx:Resources.ScorpBotInstallationDirectory}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" />

                        <Button Grid.Column="2" Grid.Row="0" Command="{Binding ScorpBotDirectoryBrowseCommand}" Content="{x:Static resx:Resources.Browse}"/>
                    </Grid>
                </Grid>

                <Grid Visibility="{Binding StreamlabsChatbotPageVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="15" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="15" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Style="{StaticResource HeaderTextBlock}" HorizontalAlignment="Center">Import Streamlabs Chat Bot Data</TextBlock>

                    <StackPanel Grid.Row="2" Width="675">
                        <TextBlock TextWrapping="Wrap" Margin="0,0,0,0">If you previously used Streamlabs Chat Bot, we can import several things from your data to get you ramped up faster in Mix It Up! Currently, the following features can be imported:</TextBlock>

                        <TextBlock Margin="20,10,0,0">- Chat Commands</TextBlock>
                        <TextBlock Margin="20,0,0,0">- Timers</TextBlock>
                        <TextBlock Margin="20,0,0,0">- Quotes</TextBlock>
                        <TextBlock Margin="20,0,0,0">- User Join Events</TextBlock>
                        <TextBlock Margin="20,0,0,0">- Viewer Data (Currency, Rank, &amp; Hours)</TextBlock>

                        <TextBlock Margin="0,20,0,0" TextWrapping="Wrap">NOTE: Streamlabs Chat Bot does not export its settings, only the data. This means that you will still need to set up certain things afterwards. This includes, but is not limited to:</TextBlock>
                        <TextBlock Margin="20,10,0,0">- Timer Frequency</TextBlock>
                        <TextBlock Margin="20,0,0,0">- Counters</TextBlock>
                        <TextBlock Margin="20,0,0,0">- Currency/Rank Name, Rates, &amp; Bonuses</TextBlock>
                        <TextBlock Margin="20,0,0,0">- Moderation Rules</TextBlock>

                        <TextBlock TextWrapping="Wrap" Margin="0,20,0,0">To get started, click on the person icon in the bottom-left corner of Streamlabs Chat Bot, then select the Cloud option. Pick a folder for the Cloud Service Folder option, click Save Settings, then click Create Excel Files. Navigate to the folder you just selected by clicking the Browse button below this and select the file Data.xlsx. You can also skip this by clicking Next:</TextBlock>
                    </StackPanel>

                    <Grid Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Row="2" Text="{Binding StreamlabsChatbotDirectory}" MaterialDesign:HintAssist.Hint="{x:Static resx:Resources.StreamlabsChatBotDataFile}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" />

                        <Button Grid.Column="2" Grid.Row="0" Command="{Binding StreamlabsChatbotDirectoryBrowseCommand}">Browse</Button>
                    </Grid>
                </Grid>

                <Grid Visibility="{Binding CommandActionsPageVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="40" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" VerticalAlignment="Center" Width="350">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" TextWrapping="Wrap">Mix It Up uses a Command &amp; Action structure for everything throughout the app. Think of it similar to a recipe that you would follow to make food.</TextBlock>

                            <TextBlock Grid.Row="2" TextWrapping="Wrap">Let's say you wanted to make some pasta; you would follow the steps in the recipe one after the other until you're done. You also would follow every step in the order they are specified. For example, you need to heat the water before you can add the pasta.</TextBlock>
                        </Grid>

                        <Image Grid.Row="2" Source="/Assets/Images/CommandExample.png" Width="200" VerticalAlignment="Bottom" />
                    </Grid>

                    <Grid Grid.Column="2" VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="40" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Image Grid.Row="0" Source="/Assets/Images/ExampleRecipe.png" Width="200" VerticalAlignment="Top" />

                        <Grid Grid.Row="2" VerticalAlignment="Center" Width="350">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" TextWrapping="Wrap">Commands are like a recipe and actions are the steps in that recipe. Let's say you make a shout out command, what are the things it should do? Each of those "things" can be thought of as an action.</TextBlock>

                            <TextBlock Grid.Row="2" TextWrapping="Wrap">In this example, our shout out command sends a message to chat, plays a sound, waits 10 seconds, and then shows an image. Each of those correspond to a different action type (Chat, Sound, Wait, and Overlay).</TextBlock>
                        </Grid>
                    </Grid>
                </Grid>

                <Grid Visibility="{Binding FinalPageVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}">
                    <Grid Grid.Row="6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="50" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="50" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="50" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="50" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" HorizontalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" VerticalAlignment="Center" TextWrapping="Wrap" Width="450">Mix It Up is a desktop-only application, so your settings and data only exist on their computer. Therefore we encourge our users to set up automatic backups for their settings to ensure you always have something to fall back to in the event of any issues:</TextBlock>

                            <Grid Grid.Column="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Button x:Name="SettingsBackupLocationButton" Grid.Row="0" Content="Set Location" Command="{Binding SetBackupLocationCommand}" />

                                <ComboBox x:Name="SettingsBackupRateComboBox" Grid.Row="2" Width="110" MaterialDesign:HintAssist.Hint="{x:Static resx:Resources.BackupRate}" ItemsSource="{Binding SettingsBackupOptions}" SelectedItem="{Binding SelectedSettingsBackupOption}" IsEnabled="{Binding IsBackupLocationSet, Converter={StaticResource BooleanToVisibilityConverter}}" Style="{StaticResource MaterialDesignFloatingHintComboBox}" />
                            </Grid>
                        </Grid>

                        <Grid Grid.Row="2" HorizontalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" TextWrapping="Wrap" Width="450">Don't know how a feature works or want more info? Simply click on the Help icon on the top bar of the main window to find out more!</TextBlock>

                            <Button Grid.Column="2" Width="40" HorizontalAlignment="Center" ToolTip="{x:Static resx:Resources.Help}">
                                <MaterialDesign:PackIcon Kind="Help" Height="24" Width="24" Margin="-13,-10" Foreground="{StaticResource WhiteColor}" />
                            </Button>
                        </Grid>

                        <TextBlock Grid.Row="4" TextWrapping="Wrap" Width="500">Don't forget the following resources available to you for questions &amp; support:</TextBlock>

                        <Grid Grid.Row="6" HorizontalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" Command="{Binding DiscordCommand}" Height="60" Width="60" Background="Transparent">
                                <Image Source="/Assets/Images/Discord.png" Width="50" Height="50" Margin="-10,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Button>

                            <Button Grid.Column="2" Command="{Binding TwitterCommand}" Height="60" Width="60" Background="Transparent">
                                <Image Source="/Assets/Images/Twitter.png" Width="45" Height="45" Margin="-10,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Button>

                            <Button Grid.Column="4" Command="{Binding YouTubeCommand}" Height="60" Width="60" Background="Transparent">
                                <Image Source="/Assets/Images/YouTube.png" Width="45" Height="45" Margin="-10,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Button>

                            <Button Grid.Column="6" Command="{Binding WikiCommand}" Height="60" Width="60" Background="Transparent">
                                <Image Source="/Assets/Images/Wiki.png" Width="50" Height="50" Margin="-10,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Button>
                        </Grid>

                        <TextBlock TextWrapping="Wrap" Grid.Row="8" HorizontalAlignment="Center">Thanks for using Mix It Up and we hope it meets all your needs!</TextBlock>
                    </Grid>
                </Grid>
            </Grid>

            <Grid Grid.Row="2" x:Name="WizardButtonsGrid" Margin="20,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="{Binding StatusMessage}" VerticalAlignment="Center" Width="550" TextWrapping="Wrap" />

                <Button Grid.Column="2" Command="{Binding BackCommand}" IsEnabled="{Binding CanBack}">&lt; Back</Button>

                <Button Grid.Column="4" Command="{Binding NextCommand}" IsEnabled="{Binding CanNext}">Next &gt;</Button>
            </Grid>
        </Grid>

        <Controls:LoadingStatusBar x:Name="StatusBar" Grid.Row="2" />
    </Grid>
</Windows:LoadingWindowBase>
